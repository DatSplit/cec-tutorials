kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume  # Sets PV's name
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/db"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim  # Sets name of PVC
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce  # Sets read and write access
  resources:
    requests:
      storage: 1Gi  # Sets volume sizeapiVersion: v1

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: psltest
  db-init: |
    CREATE SCHEMA experiment;
    CREATE TABLE experiment.researcher (id SERIAL PRIMARY KEY, email TEXT);


---
kind: Pod
apiVersion: v1
metadata:
  name: postgre-database
  labels: 
    app: postgre-db
spec:
  containers:
    - name: postgres
      image: postgres:10.1 # Sets Image
      imagePullPolicy: "IfNotPresent"
      lifecycle: 
        postStart: 
          exec: 
            command: ["/bin/bash", "-c", "sleep 10; psql -U $POSTGRES_USER -d $POSTGRES_DB -a -f /home/db-init.sql"]
        # preStop: 
        #   exec: 
        #     command: ["rm", "-r", "/var/lib/postgresql/data"]
      ports:
        - containerPort: 5432  # Exposes container port
      envFrom:
        - configMapRef:
            name: postgres-config
      volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
        - name: config-vol
          mountPath: /home
  volumes:
    - name: postgredb
      persistentVolumeClaim:
        claimName: postgres-pv-claim
    - name: config-vol
      configMap:
        name: postgres-config
        items:
          - key: db-init
            path: db-init.sql
  restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata: 
  name: postgre-svc
spec:
  type: ClusterIP
  selector:
    app: postgre-db
  ports:
    - port: 5432
      targetPort: 5432
